/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    user: UserAuthOperations;
  };
  collections: {
    media: Media;
    page: Page;
    post: Post;
    category: Category;
    download: Download;
    guide: Guide;
    user: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    media: MediaSelect<false> | MediaSelect<true>;
    page: PageSelect<false> | PageSelect<true>;
    post: PostSelect<false> | PostSelect<true>;
    category: CategorySelect<false> | CategorySelect<true>;
    download: DownloadSelect<false> | DownloadSelect<true>;
    guide: GuideSelect<false> | GuideSelect<true>;
    user: UserSelect<false> | UserSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    settings: Settings;
  };
  globalsSelect: {
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'user';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page".
 */
export interface Page {
  id: string;
  /**
   * This is for internal identification only. It is not shown to users.
   */
  title: string;
  slug?: string | null;
  pathname?: string | null;
  parent?: (string | null) | Page;
  hero: {
    type: 'none' | 'standard' | 'wave';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    settings?: {
      paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
      paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    };
  };
  blocks?:
    | (
        | AccordionBlock
        | CallToActionBlock
        | ContentBlock
        | DownloadsBlock
        | FeaturesBlock
        | StepsBlock
        | TariffsBlock
        | RecentPostsBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page.
     */
    noIndex?: boolean | null;
  };
  breadcrumbs?:
    | {
        doc?: (string | null) | Page;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionBlock".
 */
export interface AccordionBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  prefix?: ('none' | 'smiley' | 'richText') | null;
  smileyTitle?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  items?:
    | {
        title?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'accordion';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'page';
            value: string | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered
           */
          appearance?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
        };
        id?: string | null;
      }[]
    | null;
  withSublink?: boolean | null;
  sublink?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'page';
      value: string | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'callToAction';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DownloadsBlock".
 */
export interface DownloadsBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'downloads';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock".
 */
export interface FeaturesBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  variant?: ('sphere' | 'grid') | null;
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  features?:
    | {
        icon?:
          | (
              | 'globe'
              | 'rocketship'
              | 'signal'
              | 'smiley'
              | 'shield'
              | 'battery'
              | 'piggyBank'
              | 'lightning'
              | 'documentShield'
            )
          | null;
        text?: string | null;
        content?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'features';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsBlock".
 */
export interface StepsBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  withPrefix?: boolean | null;
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  items?:
    | {
        title?: string | null;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'steps';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TariffsBlock".
 */
export interface TariffsBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  withPrefix?: boolean | null;
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'tariffs';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecentPostsBlock".
 */
export interface RecentPostsBlock {
  background: {
    paddingTop: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    paddingBottom: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    type: 'none' | 'darkBlue' | 'blue' | 'flare' | 'doubleFlare';
  };
  prefix?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  settings?: {
    limit?: number | null;
    categories?: (string | Category)[] | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'recent-posts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category".
 */
export interface Category {
  id: string;
  name?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post".
 */
export interface Post {
  id: string;
  slug?: string | null;
  categories?: (string | Category)[] | null;
  title: string;
  cover?: (string | null) | Media;
  /**
   * A short preview of the content, typically shown in lists and search results.
   */
  excerpt?: string | null;
  article?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  blocks?:
    | (
        | AccordionBlock
        | CallToActionBlock
        | DownloadsBlock
        | FeaturesBlock
        | StepsBlock
        | TariffsBlock
        | RecentPostsBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page.
     */
    noIndex?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download".
 */
export interface Download {
  id: string;
  name: string;
  slug?: string | null;
  platforms?: ('windows' | 'macos' | 'linux' | 'android' | 'ios')[] | null;
  links?: {
    windows?: string | null;
    macos?: string | null;
    linux?: string | null;
    android?: string | null;
    ios?: string | null;
  };
  intro?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  icon?: (string | null) | Media;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  /**
   * Text summarizing the application. It is used in preview elements, such as the cards on the "/download" page.
   */
  previewText?: string | null;
  mockup?: (string | null) | Media;
  buyLink?: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'page';
      value: string | Page;
    } | null;
    url?: string | null;
  };
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page.
     */
    noIndex?: boolean | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide".
 */
export interface Guide {
  id: string;
  title: string;
  cover?: (string | null) | Media;
  /**
   * A short preview of the content, typically shown in lists and search results.
   */
  excerpt?: string | null;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  blocks?:
    | (
        | AccordionBlock
        | CallToActionBlock
        | DownloadsBlock
        | FeaturesBlock
        | StepsBlock
        | TariffsBlock
        | RecentPostsBlock
      )[]
    | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    /**
     * Checking this box will add metatags to the page, asking search engines not to index this page.
     */
    noIndex?: boolean | null;
  };
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user".
 */
export interface User {
  id: string;
  roles: ('admin' | 'editor')[];
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'page';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'post';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'category';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'download';
        value: string | Download;
      } | null)
    | ({
        relationTo: 'guide';
        value: string | Guide;
      } | null)
    | ({
        relationTo: 'user';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'user';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'user';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "page_select".
 */
export interface PageSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  pathname?: T;
  parent?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        settings?:
          | T
          | {
              paddingTop?: T;
              paddingBottom?: T;
            };
      };
  blocks?:
    | T
    | {
        accordion?: T | AccordionBlockSelect<T>;
        callToAction?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        downloads?: T | DownloadsBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        steps?: T | StepsBlockSelect<T>;
        tariffs?: T | TariffsBlockSelect<T>;
        'recent-posts'?: T | RecentPostsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AccordionBlock_select".
 */
export interface AccordionBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  prefix?: T;
  smileyTitle?: T;
  content?: T;
  items?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  content?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  withSublink?: T;
  sublink?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  richText?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "DownloadsBlock_select".
 */
export interface DownloadsBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  prefix?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeaturesBlock_select".
 */
export interface FeaturesBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  variant?: T;
  prefix?: T;
  features?:
    | T
    | {
        icon?: T;
        text?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StepsBlock_select".
 */
export interface StepsBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  withPrefix?: T;
  prefix?: T;
  items?:
    | T
    | {
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TariffsBlock_select".
 */
export interface TariffsBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  withPrefix?: T;
  prefix?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "RecentPostsBlock_select".
 */
export interface RecentPostsBlockSelect<T extends boolean = true> {
  background?:
    | T
    | {
        paddingTop?: T;
        paddingBottom?: T;
        type?: T;
      };
  prefix?: T;
  settings?:
    | T
    | {
        limit?: T;
        categories?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "post_select".
 */
export interface PostSelect<T extends boolean = true> {
  slug?: T;
  categories?: T;
  title?: T;
  cover?: T;
  excerpt?: T;
  article?: T;
  blocks?:
    | T
    | {
        accordion?: T | AccordionBlockSelect<T>;
        callToAction?: T | CallToActionBlockSelect<T>;
        downloads?: T | DownloadsBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        steps?: T | StepsBlockSelect<T>;
        tariffs?: T | TariffsBlockSelect<T>;
        'recent-posts'?: T | RecentPostsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "category_select".
 */
export interface CategorySelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "download_select".
 */
export interface DownloadSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  platforms?: T;
  links?:
    | T
    | {
        windows?: T;
        macos?: T;
        linux?: T;
        android?: T;
        ios?: T;
      };
  intro?: T;
  icon?: T;
  content?: T;
  previewText?: T;
  mockup?: T;
  buyLink?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "guide_select".
 */
export interface GuideSelect<T extends boolean = true> {
  title?: T;
  cover?: T;
  excerpt?: T;
  content?: T;
  blocks?:
    | T
    | {
        accordion?: T | AccordionBlockSelect<T>;
        callToAction?: T | CallToActionBlockSelect<T>;
        downloads?: T | DownloadsBlockSelect<T>;
        features?: T | FeaturesBlockSelect<T>;
        steps?: T | StepsBlockSelect<T>;
        tariffs?: T | TariffsBlockSelect<T>;
        'recent-posts'?: T | RecentPostsBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        noIndex?: T;
      };
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "user_select".
 */
export interface UserSelect<T extends boolean = true> {
  roles?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Settings {
  id: string;
  tariffs?: {
    month?: {
      term?: string | null;
      benefit?: string | null;
      limit?: string | null;
      description?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      price?: string | null;
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
      trialLink?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
    };
    quarter?: {
      term?: string | null;
      benefit?: string | null;
      limit?: string | null;
      description?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      price?: string | null;
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
      trialLink?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
    };
    year?: {
      term?: string | null;
      benefit?: string | null;
      limit?: string | null;
      description?: {
        root: {
          type: string;
          children: {
            type: string;
            version: number;
            [k: string]: unknown;
          }[];
          direction: ('ltr' | 'rtl') | null;
          format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
          indent: number;
          version: number;
        };
        [k: string]: unknown;
      } | null;
      price?: string | null;
      link?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
      trialLink?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
      };
    };
  };
  navigation?: {
    header?: {
      links?:
        | {
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'page';
                value: string | Page;
              } | null;
              url?: string | null;
              label: string;
            };
            id?: string | null;
          }[]
        | null;
      withSupportLink?: boolean | null;
      supportLink?: {
        type?: ('reference' | 'custom') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'page';
          value: string | Page;
        } | null;
        url?: string | null;
        label: string;
      };
    };
    footer?: {
      copyText?: string | null;
      links?:
        | {
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'page';
                value: string | Page;
              } | null;
              url?: string | null;
              label: string;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
  downloads?: {
    content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  seo?: {
    /**
     * These settings serve as a fallback for any pages that do not have SEO configured. If a page has SEO configured, these settings will be ignored.
     */
    default?: {
      title?: string | null;
      description?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Media;
      /**
       * Checking this box will add metatags to the page, asking search engines not to index this page.
       */
      noIndex?: boolean | null;
    };
    /**
     * For the page "/blog"
     */
    posts?: {
      title?: string | null;
      description?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Media;
      /**
       * Checking this box will add metatags to the page, asking search engines not to index this page.
       */
      noIndex?: boolean | null;
    };
    /**
     * For the page "/download"
     */
    downloads?: {
      title?: string | null;
      description?: string | null;
      /**
       * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
       */
      image?: (string | null) | Media;
      /**
       * Checking this box will add metatags to the page, asking search engines not to index this page.
       */
      noIndex?: boolean | null;
    };
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  tariffs?:
    | T
    | {
        month?:
          | T
          | {
              term?: T;
              benefit?: T;
              limit?: T;
              description?: T;
              price?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
              trialLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
            };
        quarter?:
          | T
          | {
              term?: T;
              benefit?: T;
              limit?: T;
              description?: T;
              price?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
              trialLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
            };
        year?:
          | T
          | {
              term?: T;
              benefit?: T;
              limit?: T;
              description?: T;
              price?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
              trialLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                  };
            };
      };
  navigation?:
    | T
    | {
        header?:
          | T
          | {
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
              withSupportLink?: T;
              supportLink?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
            };
        footer?:
          | T
          | {
              copyText?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                        };
                    id?: T;
                  };
            };
      };
  downloads?:
    | T
    | {
        content?: T;
      };
  seo?:
    | T
    | {
        default?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              noIndex?: T;
            };
        posts?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              noIndex?: T;
            };
        downloads?:
          | T
          | {
              title?: T;
              description?: T;
              image?: T;
              noIndex?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "YellowTextInlineBlock".
 */
export interface YellowTextInlineBlock {
  text?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'yellowText';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  images?: (string | Media)[] | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carousel';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBlock".
 */
export interface ImageBlock {
  image: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'image';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}